. configs/assign_vars.cfg


function userPrompt() {
    read -r -p "Press [Enter] to continue"
    #clear
}


function check_if_local_location_exists() {

    [ -d "${1}" ] && echo -e "The ${1} directory EXISTS\v" || echo "location doesn't exist"
}


function display_config_location() {
    echo -e "${program_name}'s config location is: ${program_configs}"
}

function unset_vars() {
    # test cleanup
    unset program_name
    #echo -e "${program_name} - should be blank/null here"
}

function handle_config_backups() {
    # question: will this work one by one?
    # idea: check if local_location of each config (hard coded) exists and if so (that is the idea), pass to backup_local_configs
    check_if_local_location_exists ${1} && backup_local_config ${1}

    display_config_location ${1}
    unset_vars
}

function check_free_space() {
    # check for free space first
    echo -e "Checking for free space, to make sure there is enough for the backup"
}

# Compress all of the configs into a single archive
function compress_backup_location () {

    #check_free_space

    compress_config_content="tar czvf ${users_home}/config_backup.tar.gz ${appimage_config_backup_location}"

    userPrompt

    # idea: append if file already exists maybe?
    [ ! -f ${compressed_config_backups_archive} ] && echo -e "About to compress archive" || echo -e "Deleting existing ${compressed_config_backups_archive}" || rm -iv ${compressed_config_backups_archive}

    ${compress_config_content} && echo "done"

}


# goal: just to backup local configs to the backup "directory"
function backup_local_config() {

    # debugging
    echo -e "in backup_local_config function now"


    # bad place but move later
    # issue: this runs each time ... it should run once and that's it
    assign_appimage_config_backup_location

    echo -e "About to sync ${program_name} configs to backup location" && rsync -av ${program_configs} ${appimage_config_backup_location}

}
