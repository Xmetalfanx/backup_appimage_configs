. configs/general_configs.cfg
. configs/assign_vars.cfg
. configs/handle_configs.cfg

# checks if ${1} (aka what is passed), exists or not 
function check_if_local_location_exists() {

    [ -d "${1}" ] && echo -e "The ${1} directory EXISTS\v" || echo "location doesn't exist"
}

# displays the config location
## sort of a "debug" type function when i call this 
function display_config_location() {
    echo -e "${program_name}'s config location is: ${program_configs}"
}

function check_free_space() {
    # check for free space first
    echo -e "Checking for free space, to make sure there is enough for the backup"
}

# Compress all of the configs into a single archive
function compress_backup_location () {

    #check_free_space

    compress_config_content="tar czvf ${users_home}/config_backup.tar.gz ${appimage_config_backup_location}"

    userPrompt

    # idea: append if file already exists maybe?
    [ ! -f ${compressed_config_backups_archive} ] && echo -e "About to compress archive" || echo -e "Deleting existing ${compressed_config_backups_archive}" || rm -iv ${compressed_config_backups_archive}

    ${compress_config_content} && echo "done"

}


# goal: just to backup local configs to the backup "directory"
function backup_local_config() {

    # debugging
    echo -e "in backup_local_config function now"


    # bad place but move later
    # issue: this runs each time ... it should run once and that's it
    assign_appimage_config_backup_location

    echo -e "About to sync ${program_name} configs to backup location" && rsync -av ${program_configs} ${appimage_config_backup_location}

}
